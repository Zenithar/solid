// Licensed to SolID under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. SolID licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

package oidc.core.v1;

option go_package = "oidc/core/v1;corev1";

import "oidc/core/v1/client.proto";
import "oidc/core/v1/error.proto";
import "google/protobuf/wrappers.proto";

// -----------------------------------------------------------------------------

service TokenIntrospectionAPI {
  rpc RevokeToken(TokenIntrospectionRequest) returns (TokenIntrospectionResponse) {};
}

// -----------------------------------------------------------------------------

// https://tools.ietf.org/html/rfc7662#section-2.1
message TokenIntrospectionRequest {
  // REQUIRED. Client that invoke the token introspection.
  Client client = 1;

  // REQUIRED.  The string value of the token.  For access tokens, this
  // is the "access_token" value returned from the token endpoint
  // defined in OAuth 2.0 [RFC6749], Section 5.1.  For refresh tokens,
  // this is the "refresh_token" value returned from the token endpoint
  // as defined in OAuth 2.0 [RFC6749], Section 5.1.  Other token types
  // are outside the scope of this specification.
  string token = 2;

  // OPTIONAL.  A hint about the type of the token submitted for
  // introspection.  The protected resource MAY pass this parameter to
  // help the authorization server optimize the token lookup.  If the
  // server is unable to locate the token using the given hint, it MUST
  // extend its search across all of its supported token types.  An
  // authorization server MAY ignore this parameter, particularly if it
  // is able to detect the token type automatically.  Values for this
  // field are defined in the "OAuth Token Type Hints" registry defined
  // in OAuth Token Revocation [RFC7009]
  google.protobuf.StringValue token_type_hint = 3;
}

// https://tools.ietf.org/html/rfc7662#section-2.2
message TokenIntrospectionResponse {
  Error error = 1;

  // REQUIRED.  Boolean indicator of whether or not the presented token
  // is currently active.  The specifics of a token's "active" state
  // will vary depending on the implementation of the authorization
  // server and the information it keeps about its tokens, but a "true"
  // value return for the "active" property will generally indicate
  // that a given token has been issued by this authorization server,
  // has not been revoked by the resource owner, and is within its
  // given time window of validity (e.g., after its issuance time and
  // before its expiration time).  See Section 4 for information on
  // implementation of such checks.
  bool active = 2;

  // OPTIONAL.  A JSON string containing a space-separated list of
  // scopes associated with this token, in the format described in
  // Section 3.3 of OAuth 2.0 [RFC6749].
  string scope = 3;

  // OPTIONAL.  Client identifier for the OAuth 2.0 client that
  // requested this token.
  string client_id = 4;

  // OPTIONAL.  Human-readable identifier for the resource owner who
  // authorized this token.
  string username = 5;

  // OPTIONAL.  Type of the token as defined in Section 5.1 of OAuth
  // 2.0 [RFC6749].
  string token_type = 6;

  // OPTIONAL.  Integer timestamp, measured in the number of seconds
  // since January 1 1970 UTC, indicating when this token will expire,
  // as defined in JWT [RFC7519].
  fixed64 exp = 7;

  // OPTIONAL.  Integer timestamp, measured in the number of seconds
  // since January 1 1970 UTC, indicating when this token was
  // originally issued, as defined in JWT [RFC7519].
  fixed64 iat = 8;

  // OPTIONAL.  Integer timestamp, measured in the number of seconds
  // since January 1 1970 UTC, indicating when this token is not to be
  // used before, as defined in JWT [RFC7519].
  fixed64 nbf = 9;

  // OPTIONAL.  Subject of the token, as defined in JWT [RFC7519].
  // Usually a machine-readable identifier of the resource owner who
  // authorized this token.
  string sub = 10;

  // OPTIONAL.  Service-specific string identifier or list of string
  // identifiers representing the intended audience for this token, as
  // defined in JWT [RFC7519].
  string aud = 11;

  // OPTIONAL.  String representing the issuer of this token, as
  // defined in JWT [RFC7519].
  string iss = 12;

  // OPTIONAL.  String identifier for the token, as defined in JWT
  // [RFC7519].
  string jti = 13;
}
