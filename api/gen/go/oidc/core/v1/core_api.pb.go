// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: oidc/core/v1/core_api.proto

package corev1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// An Authentication Request is an OAuth 2.0 Authorization Request that requests
// that the End-User be authenticated by the Authorization Server.
type AuthenticationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. OpenID Connect requests MUST contain the openid scope value. If
	// the openid scope value is not present, the behavior is entirely unspecified.
	// Other scope values MAY be present. Scope values used that are not understood
	// by an implementation SHOULD be ignored.
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	// REQUIRED. OAuth 2.0 Response Type value that determines the authorization
	// processing flow to be used, including what parameters are returned from
	// the endpoints used. When using the Authorization Code Flow, this value is
	// code.
	ResponseType string `protobuf:"bytes,2,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	// REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// REQUIRED. Redirection URI to which the response will be sent. This URI
	// MUST exactly match one of the Redirection URI values for the Client
	// pre-registered at the OpenID Provider, with the matching performed as
	// described in Section 6.2.1 of [RFC3986] (Simple String Comparison).
	// When using this flow, the Redirection URI SHOULD use the https scheme;
	// however, it MAY use the http scheme, provided that the Client Type is
	// confidential, as defined in Section 2.1 of OAuth 2.0, and provided the OP
	// allows the use of http Redirection URIs in this case. The Redirection URI
	// MAY use an alternate scheme, such as one that is intended to identify a
	// callback into a native application.
	RedirectUri string `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// RECOMMENDED. Opaque value used to maintain state between the request and
	// the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation
	// is done by cryptographically binding the value of this parameter with a
	// browser cookie.
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// OPTIONAL. Informs the Authorization Server of the mechanism to be used for
	// returning parameters from the Authorization Endpoint. This use of this
	// parameter is NOT RECOMMENDED when the Response Mode that would be requested
	// is the default mode specified for the Response Type.
	ResponseMode *wrappers.StringValue `protobuf:"bytes,6,opt,name=response_mode,json=responseMode,proto3" json:"response_mode,omitempty"`
	// OPTIONAL. String value used to associate a Client session with an ID Token,
	// and to mitigate replay attacks. The value is passed through unmodified from
	// the Authentication Request to the ID Token. Sufficient entropy MUST be
	// present in the nonce values used to prevent attackers from guessing values.
	Nonce *wrappers.StringValue `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// OPTIONAL. ASCII string value that specifies how the Authorization Server
	// displays the authentication and consent user interface pages to the End-User.
	Display *wrappers.StringValue `protobuf:"bytes,8,opt,name=display,proto3" json:"display,omitempty"`
	// OPTIONAL. Space delimited, case sensitive list of ASCII string values that
	// specifies whether the Authorization Server prompts the End-User for
	// reauthentication and consent.
	Prompt *wrappers.StringValue `protobuf:"bytes,9,opt,name=prompt,proto3" json:"prompt,omitempty"`
	// OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time
	// in seconds since the last time the End-User was actively authenticated by
	// the OP. If the elapsed time is greater than this value, the OP MUST attempt
	// to actively re-authenticate the End-User. (The max_age request parameter
	// corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] max_auth_age request
	// parameter.) When max_age is used, the ID Token returned MUST include an
	// auth_time Claim Value.
	MaxAge *wrappers.UInt64Value `protobuf:"bytes,10,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// OPTIONAL. End-User's preferred languages and scripts for the user
	// interface, represented as a space-separated list of BCP47 [RFC5646]
	// language tag values, ordered by preference. For instance, the value "fr-CA
	// fr en" represents a preference for French as spoken in Canada, then French
	// (without a region designation), followed by English (without a region
	// designation). An error SHOULD NOT result if some or all of the requested
	// locales are not supported by the OpenID Provider.
	UiLocales *wrappers.StringValue `protobuf:"bytes,11,opt,name=ui_locales,json=uiLocales,proto3" json:"ui_locales,omitempty"`
	// OPTIONAL. ID Token previously issued by the Authorization Server being
	// passed as a hint about the End-User's current or past authenticated session
	// with the Client. If the End-User identified by the ID Token is logged in or
	// is logged in by the request, then the Authorization Server returns a
	// positive response; otherwise, it SHOULD return an error, such as
	// login_required. When possible, an id_token_hint SHOULD be present when
	// prompt=none is used and an invalid_request error MAY be returned if it is
	// not; however, the server SHOULD respond successfully when possible, even
	// if it is not present. The Authorization Server need not be listed as an
	// audience of the ID Token when it is used as an id_token_hint value.
	// If the ID Token received by the RP from the OP is encrypted, to use it as
	// an id_token_hint, the Client MUST decrypt the signed ID Token contained
	// within the encrypted ID Token. The Client MAY re-encrypt the signed ID
	// token to the Authentication Server using a key that enables the server to
	// decrypt the ID Token, and use the re-encrypted ID token as the
	// id_token_hint value.
	IdTokenHint *wrappers.StringValue `protobuf:"bytes,12,opt,name=id_token_hint,json=idTokenHint,proto3" json:"id_token_hint,omitempty"`
	// OPTIONAL. Requested Authentication Context Class Reference values.
	// Space-separated string that specifies the acr values that the Authorization
	// Server is being requested to use for processing this Authentication
	// Request, with the values appearing in order of preference. The
	// Authentication Context Class satisfied by the authentication performed is
	// returned as the acr Claim Value, as specified in Section 2. The acr Claim
	// is requested as a Voluntary Claim by this parameter.
	AcrValues *wrappers.StringValue `protobuf:"bytes,13,opt,name=acr_values,json=acrValues,proto3" json:"acr_values,omitempty"`
	// OPTIONAL. This parameter enables OpenID Connect requests to be passed in a
	// single, self-contained parameter and to be optionally signed and/or
	// encrypted. The parameter value is a Request Object value, as specified in
	// Section 6.1. It represents the request as a JWT whose Claims are the
	// request parameters.
	Request *wrappers.StringValue `protobuf:"bytes,14,opt,name=request,proto3" json:"request,omitempty"`
	// OPTIONAL. This parameter enables OpenID Connect requests to be passed by
	// reference, rather than by value. The request_uri value is a URL using the
	// https scheme referencing a resource containing a Request Object value,
	// which is a JWT containing the request parameters.
	RequestUri *wrappers.StringValue `protobuf:"bytes,15,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"`
	// OPTIONAL. This parameter enables PKCE flow.
	CodeChallenge *wrappers.StringValue `protobuf:"bytes,16,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	// OPTIONAL. This parameter enables PKCE flow.
	CodeChallengeMethod *wrappers.StringValue `protobuf:"bytes,17,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"`
}

func (x *AuthenticationRequest) Reset() {
	*x = AuthenticationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationRequest) ProtoMessage() {}

func (x *AuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticationRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthenticationRequest) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

func (x *AuthenticationRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthenticationRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthenticationRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AuthenticationRequest) GetResponseMode() *wrappers.StringValue {
	if x != nil {
		return x.ResponseMode
	}
	return nil
}

func (x *AuthenticationRequest) GetNonce() *wrappers.StringValue {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *AuthenticationRequest) GetDisplay() *wrappers.StringValue {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *AuthenticationRequest) GetPrompt() *wrappers.StringValue {
	if x != nil {
		return x.Prompt
	}
	return nil
}

func (x *AuthenticationRequest) GetMaxAge() *wrappers.UInt64Value {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *AuthenticationRequest) GetUiLocales() *wrappers.StringValue {
	if x != nil {
		return x.UiLocales
	}
	return nil
}

func (x *AuthenticationRequest) GetIdTokenHint() *wrappers.StringValue {
	if x != nil {
		return x.IdTokenHint
	}
	return nil
}

func (x *AuthenticationRequest) GetAcrValues() *wrappers.StringValue {
	if x != nil {
		return x.AcrValues
	}
	return nil
}

func (x *AuthenticationRequest) GetRequest() *wrappers.StringValue {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *AuthenticationRequest) GetRequestUri() *wrappers.StringValue {
	if x != nil {
		return x.RequestUri
	}
	return nil
}

func (x *AuthenticationRequest) GetCodeChallenge() *wrappers.StringValue {
	if x != nil {
		return x.CodeChallenge
	}
	return nil
}

func (x *AuthenticationRequest) GetCodeChallengeMethod() *wrappers.StringValue {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return nil
}

// https://www.rfc-editor.org/rfc/rfc6749.html#section-4.1.2
type AuthenticationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// REQUIRED.  The authorization code generated by the
	// authorization server.  The authorization code MUST expire
	// shortly after it is issued to mitigate the risk of leaks.  A
	// maximum authorization code lifetime of 10 minutes is
	// RECOMMENDED.  The client MUST NOT use the authorization code
	// more than once.  If an authorization code is used more than
	// once, the authorization server MUST deny the request and SHOULD
	// revoke (when possible) all tokens previously issued based on
	// that authorization code.  The authorization code is bound to
	// the client identifier and redirection URI.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// REQUIRED if the "state" parameter was present in the client
	// authorization request.  The exact value received from the
	// client.
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *AuthenticationResponse) Reset() {
	*x = AuthenticationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationResponse) ProtoMessage() {}

func (x *AuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticationResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AuthenticationResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthenticationResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantType string `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	// Types that are assignable to Grant:
	//	*TokenRequest_AuthorizationCode
	//	*TokenRequest_ClientCredentials
	//	*TokenRequest_DeviceCode
	//	*TokenRequest_RefreshToken
	Grant isTokenRequest_Grant `protobuf_oneof:"grant"`
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{2}
}

func (x *TokenRequest) GetGrantType() string {
	if x != nil {
		return x.GrantType
	}
	return ""
}

func (m *TokenRequest) GetGrant() isTokenRequest_Grant {
	if m != nil {
		return m.Grant
	}
	return nil
}

func (x *TokenRequest) GetAuthorizationCode() *GrantAuthorizationCode {
	if x, ok := x.GetGrant().(*TokenRequest_AuthorizationCode); ok {
		return x.AuthorizationCode
	}
	return nil
}

func (x *TokenRequest) GetClientCredentials() *GrantClientCredentials {
	if x, ok := x.GetGrant().(*TokenRequest_ClientCredentials); ok {
		return x.ClientCredentials
	}
	return nil
}

func (x *TokenRequest) GetDeviceCode() *GrantDeviceCode {
	if x, ok := x.GetGrant().(*TokenRequest_DeviceCode); ok {
		return x.DeviceCode
	}
	return nil
}

func (x *TokenRequest) GetRefreshToken() *GrantRefreshToken {
	if x, ok := x.GetGrant().(*TokenRequest_RefreshToken); ok {
		return x.RefreshToken
	}
	return nil
}

type isTokenRequest_Grant interface {
	isTokenRequest_Grant()
}

type TokenRequest_AuthorizationCode struct {
	// tools.ietf.org/html/rfc6749#section-1.3.1
	AuthorizationCode *GrantAuthorizationCode `protobuf:"bytes,10,opt,name=authorization_code,json=authorizationCode,proto3,oneof"`
}

type TokenRequest_ClientCredentials struct {
	// tools.ietf.org/html/rfc6749#section-4.4
	ClientCredentials *GrantClientCredentials `protobuf:"bytes,11,opt,name=client_credentials,json=clientCredentials,proto3,oneof"`
}

type TokenRequest_DeviceCode struct {
	// tools.ietf.org/html/rfc8628#section-3.4
	DeviceCode *GrantDeviceCode `protobuf:"bytes,12,opt,name=device_code,json=deviceCode,proto3,oneof"`
}

type TokenRequest_RefreshToken struct {
	// tools.ietf.org/html/rfc6749#section-1.5
	RefreshToken *GrantRefreshToken `protobuf:"bytes,13,opt,name=refresh_token,json=refreshToken,proto3,oneof"`
}

func (*TokenRequest_AuthorizationCode) isTokenRequest_Grant() {}

func (*TokenRequest_ClientCredentials) isTokenRequest_Grant() {}

func (*TokenRequest_DeviceCode) isTokenRequest_Grant() {}

func (*TokenRequest_RefreshToken) isTokenRequest_Grant() {}

type TokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidc_core_v1_core_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_oidc_core_v1_core_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_oidc_core_v1_core_api_proto_rawDescGZIP(), []int{3}
}

func (x *TokenResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_oidc_core_v1_core_api_proto protoreflect.FileDescriptor

var file_oidc_core_v1_core_api_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6f,
	0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x6f, 0x69, 0x64,
	0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6f, 0x69, 0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e,
	0x07, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x36, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x35,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x75, 0x69, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x75, 0x69, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68,
	0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x48, 0x69, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x63, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61, 0x63, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x69, 0x12, 0x43, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x50, 0x0a,
	0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22,
	0x6d, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xee,
	0x02, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55,
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x69, 0x64,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x22,
	0x3a, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xac, 0x01, 0x0a, 0x10,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x50, 0x49,
	0x12, 0x56, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x2e,
	0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1a, 0x2e, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6f, 0x69, 0x64, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x15, 0x5a, 0x13, 0x6f, 0x69,
	0x64, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oidc_core_v1_core_api_proto_rawDescOnce sync.Once
	file_oidc_core_v1_core_api_proto_rawDescData = file_oidc_core_v1_core_api_proto_rawDesc
)

func file_oidc_core_v1_core_api_proto_rawDescGZIP() []byte {
	file_oidc_core_v1_core_api_proto_rawDescOnce.Do(func() {
		file_oidc_core_v1_core_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidc_core_v1_core_api_proto_rawDescData)
	})
	return file_oidc_core_v1_core_api_proto_rawDescData
}

var (
	file_oidc_core_v1_core_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
	file_oidc_core_v1_core_api_proto_goTypes  = []interface{}{
		(*AuthenticationRequest)(nil),  // 0: oidc.core.v1.AuthenticationRequest
		(*AuthenticationResponse)(nil), // 1: oidc.core.v1.AuthenticationResponse
		(*TokenRequest)(nil),           // 2: oidc.core.v1.TokenRequest
		(*TokenResponse)(nil),          // 3: oidc.core.v1.TokenResponse
		(*wrappers.StringValue)(nil),   // 4: google.protobuf.StringValue
		(*wrappers.UInt64Value)(nil),   // 5: google.protobuf.UInt64Value
		(*Error)(nil),                  // 6: oidc.core.v1.Error
		(*GrantAuthorizationCode)(nil), // 7: oidc.core.v1.GrantAuthorizationCode
		(*GrantClientCredentials)(nil), // 8: oidc.core.v1.GrantClientCredentials
		(*GrantDeviceCode)(nil),        // 9: oidc.core.v1.GrantDeviceCode
		(*GrantRefreshToken)(nil),      // 10: oidc.core.v1.GrantRefreshToken
	}
)

var file_oidc_core_v1_core_api_proto_depIdxs = []int32{
	4,  // 0: oidc.core.v1.AuthenticationRequest.response_mode:type_name -> google.protobuf.StringValue
	4,  // 1: oidc.core.v1.AuthenticationRequest.nonce:type_name -> google.protobuf.StringValue
	4,  // 2: oidc.core.v1.AuthenticationRequest.display:type_name -> google.protobuf.StringValue
	4,  // 3: oidc.core.v1.AuthenticationRequest.prompt:type_name -> google.protobuf.StringValue
	5,  // 4: oidc.core.v1.AuthenticationRequest.max_age:type_name -> google.protobuf.UInt64Value
	4,  // 5: oidc.core.v1.AuthenticationRequest.ui_locales:type_name -> google.protobuf.StringValue
	4,  // 6: oidc.core.v1.AuthenticationRequest.id_token_hint:type_name -> google.protobuf.StringValue
	4,  // 7: oidc.core.v1.AuthenticationRequest.acr_values:type_name -> google.protobuf.StringValue
	4,  // 8: oidc.core.v1.AuthenticationRequest.request:type_name -> google.protobuf.StringValue
	4,  // 9: oidc.core.v1.AuthenticationRequest.request_uri:type_name -> google.protobuf.StringValue
	4,  // 10: oidc.core.v1.AuthenticationRequest.code_challenge:type_name -> google.protobuf.StringValue
	4,  // 11: oidc.core.v1.AuthenticationRequest.code_challenge_method:type_name -> google.protobuf.StringValue
	6,  // 12: oidc.core.v1.AuthenticationResponse.error:type_name -> oidc.core.v1.Error
	7,  // 13: oidc.core.v1.TokenRequest.authorization_code:type_name -> oidc.core.v1.GrantAuthorizationCode
	8,  // 14: oidc.core.v1.TokenRequest.client_credentials:type_name -> oidc.core.v1.GrantClientCredentials
	9,  // 15: oidc.core.v1.TokenRequest.device_code:type_name -> oidc.core.v1.GrantDeviceCode
	10, // 16: oidc.core.v1.TokenRequest.refresh_token:type_name -> oidc.core.v1.GrantRefreshToken
	6,  // 17: oidc.core.v1.TokenResponse.error:type_name -> oidc.core.v1.Error
	0,  // 18: oidc.core.v1.AuthorizationAPI.Authorize:input_type -> oidc.core.v1.AuthenticationRequest
	2,  // 19: oidc.core.v1.AuthorizationAPI.Token:input_type -> oidc.core.v1.TokenRequest
	1,  // 20: oidc.core.v1.AuthorizationAPI.Authorize:output_type -> oidc.core.v1.AuthenticationResponse
	3,  // 21: oidc.core.v1.AuthorizationAPI.Token:output_type -> oidc.core.v1.TokenResponse
	20, // [20:22] is the sub-list for method output_type
	18, // [18:20] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_oidc_core_v1_core_api_proto_init() }
func file_oidc_core_v1_core_api_proto_init() {
	if File_oidc_core_v1_core_api_proto != nil {
		return
	}
	file_oidc_core_v1_core_proto_init()
	file_oidc_core_v1_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_oidc_core_v1_core_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidc_core_v1_core_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oidc_core_v1_core_api_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TokenRequest_AuthorizationCode)(nil),
		(*TokenRequest_ClientCredentials)(nil),
		(*TokenRequest_DeviceCode)(nil),
		(*TokenRequest_RefreshToken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidc_core_v1_core_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oidc_core_v1_core_api_proto_goTypes,
		DependencyIndexes: file_oidc_core_v1_core_api_proto_depIdxs,
		MessageInfos:      file_oidc_core_v1_core_api_proto_msgTypes,
	}.Build()
	File_oidc_core_v1_core_api_proto = out.File
	file_oidc_core_v1_core_api_proto_rawDesc = nil
	file_oidc_core_v1_core_api_proto_goTypes = nil
	file_oidc_core_v1_core_api_proto_depIdxs = nil
}
